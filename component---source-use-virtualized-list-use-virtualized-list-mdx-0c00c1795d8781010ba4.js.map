{"version":3,"sources":["webpack:///../source/useVirtualizedList/useVirtualizedList.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","useVirtualizedList","scope","items","Array","from","length","_","index","initialContainerSize","overscan","ref","onScroll","virtualItems","style","overflowY","height","map","key","item","fontSize","isMDXComponent"],"mappings":"iRAUaA,G,UAAe,S,kOAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,+kBAAklBC,SAAO,GAC1nBJ,QACAH,kBACAQ,eACAC,wBAJ0nB,gBAK1nBT,IAL0nB,EAM1nBH,eAN0nB,GAOznBa,MAAO,CACRD,wBACCL,QAAQ,eACb,WACM,IAIMO,EAAQC,MAAMC,KAAK,CACvBC,OALa,MAMZ,SAACC,EAAGC,GAAJ,OAAcA,KAPjB,EAYmBP,YAAmBE,EAAO,CAC3CM,qBAXa,IAYbC,SAXe,KAHjB,OAUEC,EAVF,EAUEA,IACAC,EAXF,EAWEA,SACCC,EAZH,KAiBA,OAAO,mBAAKF,IAAKA,EAAKC,SAAUA,EAAUE,MAAO,CAC/CC,UAAW,OACXC,OAjBa,MAmBlBH,EAAaI,KAAI,gBACVN,EADU,EACVA,IACAO,EAFU,EAEVA,IACAC,EAHU,EAGVA,KACAL,EAJU,EAIVA,MAJU,OAKN,mBAAKH,IAAKA,EAAKO,IAAKA,EAAKJ,MAAOA,GAAhC,QACL,oBAAMA,MAAO,CACVM,SAAU,KACRD,iB,gOAShB1B,EAAW4B,gBAAiB","file":"component---source-use-virtualized-list-use-virtualized-list-mdx-0c00c1795d8781010ba4.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-list-utilities/react-list-utilities/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from \"docz\";\nimport { useVirtualizedList } from \"./useVirtualizedList.ts\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2 {...{\n      \"id\": \"playground\"\n    }}>{`Playground`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const length = 100\\n  const height = 250\\n  const overscan = 50\\n  //\\n  const items = Array.from({ length }, (_, index) => index)\\n  //\\n  const [{ ref, onScroll }, virtualItems] = useVirtualizedList(items, {\\n    initialContainerSize: height,\\n    overscan,\\n  })\\n  //\\n  return (\\n    <div ref={ref} onScroll={onScroll} style={{ overflowY: \\'auto\\', height }}>\\n      {virtualItems.map(({ ref, key, item, style }) => (\\n        <div ref={ref} key={key} style={style}>\\n          item <span style={{ fontSize: 32 }}>{item}</span>\\n        </div>\\n      ))}\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      useVirtualizedList,\n      DefaultLayout,\n      _frontmatter\n    }} scope={{\n      useVirtualizedList\n    }} mdxType=\"Playground\">\n\t{() => {\n        const length = 100;\n        const height = 250;\n        const overscan = 50; //\n\n        const items = Array.from({\n          length\n        }, (_, index) => index); //\n\n        const [{\n          ref,\n          onScroll\n        }, virtualItems] = useVirtualizedList(items, {\n          initialContainerSize: height,\n          overscan\n        }); //\n\n        return <div ref={ref} onScroll={onScroll} style={{\n          overflowY: \"auto\",\n          height\n        }}>\n\t\t\t\t{virtualItems.map(({\n            ref,\n            key,\n            item,\n            style\n          }) => <div ref={ref} key={key} style={style}>\n\t\t\t\t\t\titem <span style={{\n              fontSize: 32\n            }}>{item}</span>\n\t\t\t\t\t</div>)}\n\t\t\t</div>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}